AWSTemplateFormatVersion: 2010-09-09
Description: Template para el despliegue de recursos RDS.

Parameters: #Parametros que necesitan los recursos para poder ser desplegados
  pEnvironment:
    Description: Ambiente donde se despliega.
    Type: String

  pEngineVersion:
    Description: Engine Version RDS.
    Type: String

  pRdsclassintance:
    Description: Class RDS Instance primary
    Type: String

  pRdspAppBucketName:
    Description: Buecket RDS
    Type: String

  pPSSGEC2:
    Description: Security Group EC2 APP
    Type: String

  psgDMS:
    Description: Security Group DMS
    Type: String

  pDataBase:
    Description: Motor de base de datos
    Type: String

  pDBName:
    Description: Nombre de la base de datos.
    Type: String
    
  pDBPortFROM:
    Description: DMS Instance Name
    Type: String  

  pDBPortTO:
    Description: DMS Instance Name
    Type: String 

  pCidrIp:
    Description: DMS Instance Name
    Type: String 

  pDBDMSIp:
    Description: DMS Instance Name
    Type: String 

  pAllocatedStorage:
    Description: Tamano del almacenamiento en GB.
    Type: String

  pStorageType:
    Description: El tipo de almacenamiento asociado con esta instancia de base de datos
    Type: String

  pLicenseModel:
    Description: El modelo de licencia de la instancia de base de datos.
    Type: String
    Default: bring-your-own-license

  pSnapshotIdentifier:
    Description: Identificador de snapshot para restauracion.
    Type: String

  pCharacterSetName:
    Description: Character set of the RDS.
    Type: String

  pImportBase:
    Description: The base name of the imported objetcs
    Type: String

  pMaxAllocatedStorage:
    Description: Tamano maximo de almacenamiento en GB.
    Type: String

  pSGTrasnversal:
    Description: Seurity Group Transveral RDS.
    Type: String

  pIopsAprovicionados:
    Description: Iops Storage io1.
    Type: String

  instanceScheduler:
    Description: nombre de la instance de la base de datos scheduler
    Type: String

  pLogGroupName:
    Description: Path to log group
    Type: String
    MinLength: 1
    MaxLength: 100

  pFilters:
    Description: Filters for triggering lambda
    Type: String
    MinLength: 1
    MaxLength: 200

  pkmsproject:
    Description: Llave de cifrado del proyecto
    Type: String  
  
  KMSADKey:
    Description: ARN KMS AD Key
    Type: String
  KMSpdn:
    Description: ARN KMS AD Key pdn
    Type: String
  KMSshared:
    Description: ARN KMS AD Key shared
    Type: String

Mappings:
  oracle:
    qa:
      BackupRetentionPeriod: 8
      Engine: "oracle-ee"

      MultiAZ: true
      DeletionProtection: false
      OptionGroup: "stackset-aws-addon-database-lb-aectd433-547t-fd23-fd23-651033a1b36e-dbaoracleee19optiongroup-sdf2124asdsfsd"
      port: "50200"
      PreferredMaintenanceWindow: Sun:07:30-Sun:08:30
      PreferredBackupWindow: "05:30-06:30"

      PerformanceInsightsRetentionPeriod: 7
      EnablePerformanceInsights: true
      EnableCloudwatchLogsExports:
        - trace
        - audit
        - alert
        - listener
    pdn:
      BackupRetentionPeriod: 35
      Engine: "oracle-ee"

      MultiAZ: true
      DeletionProtection: true
      OptionGroup: "stackset-aws-addon-database-lb-9797665-r542d-65gg-uy132-sfd2f1we54f-dbaoracleee19optiongroup-sdf2545er4tsddd"
      port: "57916"
      PreferredMaintenanceWindow: Wed:08:00-Wed:08:30
      PreferredBackupWindow: "06:30-07:30"
      PerformanceInsightsRetentionPeriod: 7
      EnablePerformanceInsights: true

      EnableCloudwatchLogsExports:
        - trace
        - audit
        - alert
        - listener

Conditions:
  cEmptySnapshot:
    Fn::Equals: [ Ref: pSnapshotIdentifier, "none" ]
  envPdn:
    Fn::Equals: [ Ref: pEnvironment, "pdn" ]
  envDev:
    Fn::Equals: [ Ref: pEnvironment, "dev" ]
  envQa:
    Fn::Equals: [ Ref: pEnvironment, "qa" ]

  cTypeStorage:
    Fn::And:
      - Fn::Equals: [ Ref: pStorageType, "io1" ]
      - !Not [ !Equals  [ Ref: pIopsAprovicionados, " " ] ]

  cIngressEC2APP:
    Fn::And:
      - !Not [ !Equals [ Ref: pPSSGEC2, "" ] ]
      - !Not [ !Equals [ Ref: pPSSGEC2, nosnap ] ]

  csgdms:
    Fn::And:
      - !Not [ !Equals [ Ref: psgDMS, "" ] ]
      - !Not [ !Equals [ Ref: psgDMS, nosnap ] ]

Resources:
  #Segurtiy Group personalizado para la RDS.
  rDBSecurityGroups:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName:
        Fn::Join: [ "", [ Ref: pImportBase, "-sg-rds-dms" ] ]
      GroupDescription: Grupo de securidad para la instancia de base de datos.
      VpcId:
        Fn::ImportValue: 'DefaultVPCId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Acceso Base Datos"
          FromPort: !Ref pDBPortFROM
          ToPort: !Ref pDBPortTO
          CidrIp: !Ref pCidrIp
        - IpProtocol: tcp
          Description: "Acceso a DMS"
          FromPort:
            Fn::FindInMap:
              - Ref: pDataBase
              - Ref: pEnvironment
              - port
          ToPort:
            Fn::FindInMap:
              - Ref: pDataBase
              - Ref: pEnvironment
              - port
          CidrIp: !Ref pDBDMSIp
        - IpProtocol: tcp
          Description: "Acceso DG"
          FromPort:
            Fn::FindInMap:
              - Ref: pDataBase
              - Ref: pEnvironment
              - port
          ToPort:
            Fn::FindInMap:
              - Ref: pDataBase
              - Ref: pEnvironment
              - port
          CidrIp: '{{resolve:ssm:RangoIpDG:1}}'
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ "", [ Ref: pImportBase, "-sg-rds-dms" ] ]

  rIngressSSISSecurityGroupDMS:
    Condition: csgdms
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - port

      ToPort:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - port

      SourceSecurityGroupId: !Ref psgDMS
      Description: "Allow access to the RDS from DMS"
      GroupId: !Ref rDBSecurityGroups

  rIngressSecurityGroupAPPEC2:
    Condition: cIngressEC2APP
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - port
      ToPort:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - port
      SourceSecurityGroupId: !Ref pPSSGEC2
      Description: "Allow access APP EC2 Thanos."
      GroupId: !Ref rDBSecurityGroups

  rIAMRoleForRDS:
    Type: 'AWS::IAM::Role'
    Properties:
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/Governance-control
      RoleName:
        Fn::Join: [ "-", [ Ref: 'AWS::StackName' , "role" ] ]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - rds.amazonaws.com
                - monitoring.rds.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowDMS
                Effect: "Allow"
                Action:
                  - 'dms:CreateEndpoint'
                  - 'dms:DeleteEndpoint'
                  - 'dms:ModifyEndpoint'
                  - 'dms:CreateReplicationTask'
                  - 'dms:DeleteReplicationTask'
                  - 'dms:StartReplicationTask'
                  - 'dms:StopReplicationTask'
                  - 'dms:DescribeEndpoints'
                  - 'dms:DescribeReplicationTasks'
                  - 'dms:TestConnection'
                  - 'dms:CreateDataProvider'
                Resource: "*"
              - Sid: AllowRDS
                Effect: "Allow"
                Action:
                  - 'rds:DescribeDBInstances'
                  - 'rds:ListTagsForResource'
                  - 'rds:ModifyDBInstance'
                Resource: "*"
            # Permisos para IAM
              - Sid: AllowIAM
                Effect: "Allow"
                Action:
                  - 'iam:GetRole'
                  - 'iam:PassRole'
                  - 'iam:CreateRole'
                  - 'iam:AttachRolePolicy'
                Resource: "*"
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:DeleteObjectVersion'
                  - 's3:DeleteObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetObjectACL'
                  - 's3:PutObjectACL'
                  - 's3:PutObjectTagging'
                  - 's3:GetBucketLocation'
                # - 's3:*'
                Resource:
                  - Fn::Sub: arn:aws:s3:::${pRdspAppBucketName}
                  - Fn::Sub: arn:aws:s3:::${pRdspAppBucketName}/*
                Effect: "Allow"
          PolicyName:
            Fn::Join: [ "-", [ Ref: 'AWS::StackName' , "iam-policy" ] ]
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'kms:Decrypt'
                  - 'kms:DescribeKey'
                  - 'kms:ReEncryptTo'
                  - 'kms:ReEncryptFrom'
                  - 'kms:Encrypt'
                  - 'kms:GenerateDataKey'
                Resource:
                  - Fn::Join: [ "",[ "arn:aws:kms:", Ref: 'AWS::Region' ,":", Ref: 'AWS::AccountId',":key/", !Ref KMSpdn ] ]
                Effect: Allow
          PolicyName:
            Fn::Join: [ "-", [ Ref: 'AWS::StackName' , "kms-policy" ] ]

  rS3BucketPolicyRDS:
    Type: AWS::S3::BucketPolicy
    DependsOn: rIAMRoleForRDS
    Properties:
      Bucket:
        Ref: pRdspAppBucketName
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                # - Fn::GetAtt: rIAMRoleForRDS.Arn
                - Fn::If:
                    - envPdn
                    - "arn:aws:iam::921455675233:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_Control-parental-4wer65w4er6werw5w4"
                    - !Ref "AWS::NoValue"
                - Fn::If:
                    - envQa
                    - "arn:aws:iam::546873213250:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_Control-parental-65564wdsfsdf564354"
                    - !Ref "AWS::NoValue"
                - Fn::If:
                    - envDev
                    - "arn:aws:iam::378524656565:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_Control-parental-32454wsedr6w5e5rw5"
                    - !Ref "AWS::NoValue"
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:ListBucket
              - s3:GetObjectACL
              - s3:GetBucketLocation
            Resource:
              - Fn::Join: [ '', [ 'arn:aws:s3:::', !Ref 'pRdspAppBucketName', /* ] ]
              - Fn::Join: [ '', [ 'arn:aws:s3:::', !Ref 'pRdspAppBucketName' ] ]
            Condition:
              Bool:
                aws:SecureTransport: 'true'
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:*
            Resource:
              - Fn::Join: [ '', [ 'arn:aws:s3:::', !Ref 'pRdspAppBucketName', /* ] ]
              - Fn::Join: [ '', [ 'arn:aws:s3:::', !Ref 'pRdspAppBucketName' ] ]
            Condition:
              Bool:
                aws:SecureTransport: 'false'

  #Rol para monitoreo de la BD
  rEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/Governance-control
      RoleName:
        Fn::Join: [ "-", [ Ref: pImportBase, "RDSEnhancedMonitoringRoleApp" ] ]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Path: "/"

  #Recurso RDS Base de Datos Oracle
  rDataBases:
    Type: 'AWS::RDS::DBInstance'
    DependsOn: rParameterGroupParameterStore
    Properties:
      CopyTagsToSnapshot: true
      DBName:
        Ref: pDBName
      DBInstanceIdentifier:
        Fn::Join: [ "-", [ Ref: pImportBase, "rds-dms" ] ]
      VPCSecurityGroups:
        - Ref: rDBSecurityGroups
        - Ref: pSGTrasnversal
      AllocatedStorage:
        Ref: pAllocatedStorage
      MaxAllocatedStorage:
        Ref: pMaxAllocatedStorage
      DBSnapshotIdentifier:
        Fn::If:
          - cEmptySnapshot
          - Ref: AWS::NoValue
          - Ref: pSnapshotIdentifier
      StorageType:
        Ref: pStorageType
      Iops:
        Fn::If:
          - cTypeStorage
          - Ref: pIopsAprovicionados
          - Ref: AWS::NoValue
      DBInstanceClass:
        Ref: pRdsclassintance
      Engine:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - Engine
      EngineVersion:
        Ref: pEngineVersion
      PerformanceInsightsRetentionPeriod:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - PerformanceInsightsRetentionPeriod
      EnablePerformanceInsights:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - EnablePerformanceInsights
      LicenseModel:
        Ref: pLicenseModel
      Port:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - port
      KmsKeyId: !Ref pkmsproject
      CharacterSetName:
        Ref: pCharacterSetName
      MultiAZ:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - MultiAZ
      EnableCloudwatchLogsExports:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - EnableCloudwatchLogsExports
      MasterUsername:
        Fn::Join: [ '', [ '{{resolve:secretsmanager:', Ref: rSecretAdminRDS, ':SecretString:username}}' ] ]
      MasterUserPassword:
        Fn::Join: [ '', [ '{{resolve:secretsmanager:', Ref: rSecretAdminRDS, ':SecretString:password}}' ] ]
      PreferredBackupWindow:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - PreferredBackupWindow
      DBParameterGroupName:
        Fn::Join: [ "", [ "{{resolve:ssm:", Ref: rParameterGroupParameterStore, ":1}}" ] ]
      StorageEncrypted: true
      AutoMinorVersionUpgrade: true
      AllowMajorVersionUpgrade: true
      #EnablePerformanceInsights: true
      PreferredMaintenanceWindow:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - PreferredMaintenanceWindow
      DBSubnetGroupName:
        Fn::Sub: '${pEnvironment}-db-subnets2'
      OptionGroupName:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - OptionGroup
      DeletionProtection:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - DeletionProtection
      PubliclyAccessible: false
      DeleteAutomatedBackups: true
      BackupRetentionPeriod:
        Fn::FindInMap:
          - Ref: pDataBase
          - Ref: pEnvironment
          - BackupRetentionPeriod
      AssociatedRoles:
        - FeatureName: S3_INTEGRATION
          RoleArn:
            Fn::GetAtt: rIAMRoleForRDS.Arn
      MonitoringRoleArn: !GetAtt rEnhancedMonitoringRole.Arn
      MonitoringInterval: 60
      Tags:
        - Key: Control-Parental:clasificacion-confidencialidad
          Value: "restringida"
        - Key: Control-Parental:clasificacion-integridad
          Value: "impacto critico"
        - Key: Control-Parental:clasificacion-disponibilidad
          Value: "impacto critico"
        - Key: Control-Parental:dominio-informacion
          Value: "no"
        - Key: Control-Parental:datos-personales
          Value: "no"
        - Key: Control-Parental:cumplimiento
          Value: "bia"
        - Key: Control-Parental:bkmensual
          Value: "rds"
        - Key: Control-Parental:bkdiario
          Value: "rds"
        - Key: instance:scheduler
          Value: !Sub '${instanceScheduler}'
    DeletionPolicy: Snapshot

  rDBAOracleEE19ParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: Parameter Group RDS Detectid
      Family: oracle-ee-19
      Parameters:
        audit_trail: XML,EXTENDED
        _trace_files_public: FALSE
        db_writer_processes: 1
        job_queue_processes: 4000
        resource_manager_cpu_allocation: 8
        sec_max_failed_login_attempts: 10
        undo_retention: 15864300
        db_block_checking: FALSE
        dml_locks: 9996
        parallel_max_servers: 320
        parallel_min_servers: 0
        parallel_servers_target: 128
        pre_page_sga: FALSE
      Tags:
        - Key: Name
          Value: !Join [ "", [ !Ref 'AWS::StackName' ,"OracleEE19", "-parametergroup" ] ]

  rSecretAdminRDS:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:
        Fn::Sub: '${pImportBase}-secretrds-admind'
      Description:
        Fn::Sub: 'Secreto del usuario administrador de la base de datos ${pImportBase}.'
      KmsKeyId: '{{resolve:ssm:ops0001001-secretrds-admin-cmk}}'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "usrAdmin"}'
        GenerateStringKey: "password"
        PasswordLength: 15
        ExcludeCharacters: '"@/\'

  rSecretAdminRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: rSecretAdminRDS
      TargetId:
        Ref: rDataBases
      TargetType: AWS::RDS::DBInstance

  rParameterGroupParameterStore:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Parameter Groups 
      Type: String
      Name: !Join [ "-", [ !Ref 'AWS::StackName', "ParameterGroups" ] ]
      Value:
        !Ref rDBAOracleEE19ParameterGroup

  rInstanceRDSParameterStore:
    Type: AWS::SSM::Parameter
    Properties:
      Description: DBInstanceIdentifier RDS
      Type: String
      Name:
        Fn::Join: [ "-", [ Ref: 'AWS::StackName', "ident" ] ]
      Value:
        Ref: rDataBases

  rSecurityGroupRDSParameterStore:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Id security group RDS
      Type: String
      Name: !Join [ "-", [ !Ref 'AWS::StackName', "sg" ] ]
      Value:
        Ref: rDBSecurityGroups

Outputs:
  JDBCConnectionString:
    Description: JDBC connection string for the database
    Value:
      Fn::Join:
        - ''
        - - 'jdbc:'
          - Ref: pDataBase
          - '://'
          - Fn::GetAtt:
              - rDataBases
              - Endpoint.Address
          - ':'
          - Fn::GetAtt:
              - rDataBases
              - Endpoint.Port
          - /
          - Ref: pDBName